{
    "Resources": {
        "MockServiceLogGroup408943F7": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": {
                    "Fn::Join": [
                        "",
                        [
                            "/ecs/",
                            {
                                "Ref": "AWS::StackName"
                            }
                        ]
                    ]
                },
                "RetentionInDays": 14
            },
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete"
        },
        "MockServiceClusterE0421788": {
            "Type": "AWS::ECS::Cluster"
        },
        "MockServiceClusterVpc9E9957A9": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "EnableDnsHostnames": true,
                "EnableDnsSupport": true,
                "InstanceTenancy": "default",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "mock-service-fargate/MockServiceCluster/Vpc"
                    }
                ]
            }
        },
        "MockServiceClusterVpcPublicSubnet1SubnetDF4B3D16": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.0.0.0/18",
                "MapPublicIpOnLaunch": true,
                "Tags": [
                    {
                        "Key": "aws-cdk:subnet-name",
                        "Value": "Public"
                    },
                    {
                        "Key": "aws-cdk:subnet-type",
                        "Value": "Public"
                    },
                    {
                        "Key": "Name",
                        "Value": "mock-service-fargate/MockServiceCluster/Vpc/PublicSubnet1"
                    }
                ],
                "VpcId": {
                    "Ref": "MockServiceClusterVpc9E9957A9"
                }
            }
        },
        "MockServiceClusterVpcPublicSubnet1RouteTable031491D7": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "mock-service-fargate/MockServiceCluster/Vpc/PublicSubnet1"
                    }
                ],
                "VpcId": {
                    "Ref": "MockServiceClusterVpc9E9957A9"
                }
            }
        },
        "MockServiceClusterVpcPublicSubnet1RouteTableAssociation0B3A395C": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "MockServiceClusterVpcPublicSubnet1RouteTable031491D7"
                },
                "SubnetId": {
                    "Ref": "MockServiceClusterVpcPublicSubnet1SubnetDF4B3D16"
                }
            }
        },
        "MockServiceClusterVpcPublicSubnet1DefaultRouteEB3CB824": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "MockServiceClusterVpcIGWFF0A1635"
                },
                "RouteTableId": {
                    "Ref": "MockServiceClusterVpcPublicSubnet1RouteTable031491D7"
                }
            },
            "DependsOn": [
                "MockServiceClusterVpcVPCGWF12CE9A6"
            ]
        },
        "MockServiceClusterVpcPublicSubnet1EIP51653644": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "mock-service-fargate/MockServiceCluster/Vpc/PublicSubnet1"
                    }
                ]
            }
        },
        "MockServiceClusterVpcPublicSubnet1NATGateway13FD296D": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "MockServiceClusterVpcPublicSubnet1EIP51653644",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "MockServiceClusterVpcPublicSubnet1SubnetDF4B3D16"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "mock-service-fargate/MockServiceCluster/Vpc/PublicSubnet1"
                    }
                ]
            },
            "DependsOn": [
                "MockServiceClusterVpcPublicSubnet1DefaultRouteEB3CB824",
                "MockServiceClusterVpcPublicSubnet1RouteTableAssociation0B3A395C"
            ]
        },
        "MockServiceClusterVpcPublicSubnet2SubnetF796A007": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.0.64.0/18",
                "MapPublicIpOnLaunch": true,
                "Tags": [
                    {
                        "Key": "aws-cdk:subnet-name",
                        "Value": "Public"
                    },
                    {
                        "Key": "aws-cdk:subnet-type",
                        "Value": "Public"
                    },
                    {
                        "Key": "Name",
                        "Value": "mock-service-fargate/MockServiceCluster/Vpc/PublicSubnet2"
                    }
                ],
                "VpcId": {
                    "Ref": "MockServiceClusterVpc9E9957A9"
                }
            }
        },
        "MockServiceClusterVpcPublicSubnet2RouteTable318DC490": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "mock-service-fargate/MockServiceCluster/Vpc/PublicSubnet2"
                    }
                ],
                "VpcId": {
                    "Ref": "MockServiceClusterVpc9E9957A9"
                }
            }
        },
        "MockServiceClusterVpcPublicSubnet2RouteTableAssociation3F2ABF6E": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "MockServiceClusterVpcPublicSubnet2RouteTable318DC490"
                },
                "SubnetId": {
                    "Ref": "MockServiceClusterVpcPublicSubnet2SubnetF796A007"
                }
            }
        },
        "MockServiceClusterVpcPublicSubnet2DefaultRoute164E1547": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "MockServiceClusterVpcIGWFF0A1635"
                },
                "RouteTableId": {
                    "Ref": "MockServiceClusterVpcPublicSubnet2RouteTable318DC490"
                }
            },
            "DependsOn": [
                "MockServiceClusterVpcVPCGWF12CE9A6"
            ]
        },
        "MockServiceClusterVpcPublicSubnet2EIP96A09685": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "mock-service-fargate/MockServiceCluster/Vpc/PublicSubnet2"
                    }
                ]
            }
        },
        "MockServiceClusterVpcPublicSubnet2NATGateway74FC7E9C": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "MockServiceClusterVpcPublicSubnet2EIP96A09685",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "MockServiceClusterVpcPublicSubnet2SubnetF796A007"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "mock-service-fargate/MockServiceCluster/Vpc/PublicSubnet2"
                    }
                ]
            },
            "DependsOn": [
                "MockServiceClusterVpcPublicSubnet2DefaultRoute164E1547",
                "MockServiceClusterVpcPublicSubnet2RouteTableAssociation3F2ABF6E"
            ]
        },
        "MockServiceClusterVpcPrivateSubnet1Subnet795620A7": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.0.128.0/18",
                "MapPublicIpOnLaunch": false,
                "Tags": [
                    {
                        "Key": "aws-cdk:subnet-name",
                        "Value": "Private"
                    },
                    {
                        "Key": "aws-cdk:subnet-type",
                        "Value": "Private"
                    },
                    {
                        "Key": "Name",
                        "Value": "mock-service-fargate/MockServiceCluster/Vpc/PrivateSubnet1"
                    }
                ],
                "VpcId": {
                    "Ref": "MockServiceClusterVpc9E9957A9"
                }
            }
        },
        "MockServiceClusterVpcPrivateSubnet1RouteTable92DAE4B6": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "mock-service-fargate/MockServiceCluster/Vpc/PrivateSubnet1"
                    }
                ],
                "VpcId": {
                    "Ref": "MockServiceClusterVpc9E9957A9"
                }
            }
        },
        "MockServiceClusterVpcPrivateSubnet1RouteTableAssociationF4B50EFD": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "MockServiceClusterVpcPrivateSubnet1RouteTable92DAE4B6"
                },
                "SubnetId": {
                    "Ref": "MockServiceClusterVpcPrivateSubnet1Subnet795620A7"
                }
            }
        },
        "MockServiceClusterVpcPrivateSubnet1DefaultRoute7F20A2FB": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "MockServiceClusterVpcPublicSubnet1NATGateway13FD296D"
                },
                "RouteTableId": {
                    "Ref": "MockServiceClusterVpcPrivateSubnet1RouteTable92DAE4B6"
                }
            }
        },
        "MockServiceClusterVpcPrivateSubnet2Subnet7510FC2A": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.0.192.0/18",
                "MapPublicIpOnLaunch": false,
                "Tags": [
                    {
                        "Key": "aws-cdk:subnet-name",
                        "Value": "Private"
                    },
                    {
                        "Key": "aws-cdk:subnet-type",
                        "Value": "Private"
                    },
                    {
                        "Key": "Name",
                        "Value": "mock-service-fargate/MockServiceCluster/Vpc/PrivateSubnet2"
                    }
                ],
                "VpcId": {
                    "Ref": "MockServiceClusterVpc9E9957A9"
                }
            }
        },
        "MockServiceClusterVpcPrivateSubnet2RouteTable3DEC494B": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "mock-service-fargate/MockServiceCluster/Vpc/PrivateSubnet2"
                    }
                ],
                "VpcId": {
                    "Ref": "MockServiceClusterVpc9E9957A9"
                }
            }
        },
        "MockServiceClusterVpcPrivateSubnet2RouteTableAssociationE92A41CA": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "MockServiceClusterVpcPrivateSubnet2RouteTable3DEC494B"
                },
                "SubnetId": {
                    "Ref": "MockServiceClusterVpcPrivateSubnet2Subnet7510FC2A"
                }
            }
        },
        "MockServiceClusterVpcPrivateSubnet2DefaultRouteF1F31B41": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "MockServiceClusterVpcPublicSubnet2NATGateway74FC7E9C"
                },
                "RouteTableId": {
                    "Ref": "MockServiceClusterVpcPrivateSubnet2RouteTable3DEC494B"
                }
            }
        },
        "MockServiceClusterVpcIGWFF0A1635": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "mock-service-fargate/MockServiceCluster/Vpc"
                    }
                ]
            }
        },
        "MockServiceClusterVpcVPCGWF12CE9A6": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "MockServiceClusterVpcIGWFF0A1635"
                },
                "VpcId": {
                    "Ref": "MockServiceClusterVpc9E9957A9"
                }
            }
        },
        "MyFargateServiceLBDE830E97": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "LoadBalancerAttributes": [
                    {
                        "Key": "deletion_protection.enabled",
                        "Value": "false"
                    }
                ],
                "Scheme": "internet-facing",
                "SecurityGroups": [
                    {
                        "Fn::GetAtt": [
                            "MyFargateServiceLBSecurityGroup6FBF16F1",
                            "GroupId"
                        ]
                    }
                ],
                "Subnets": [
                    {
                        "Ref": "MockServiceClusterVpcPublicSubnet1SubnetDF4B3D16"
                    },
                    {
                        "Ref": "MockServiceClusterVpcPublicSubnet2SubnetF796A007"
                    }
                ],
                "Type": "application"
            },
            "DependsOn": [
                "MockServiceClusterVpcPublicSubnet1DefaultRouteEB3CB824",
                "MockServiceClusterVpcPublicSubnet1RouteTableAssociation0B3A395C",
                "MockServiceClusterVpcPublicSubnet2DefaultRoute164E1547",
                "MockServiceClusterVpcPublicSubnet2RouteTableAssociation3F2ABF6E"
            ]
        },
        "MyFargateServiceLBSecurityGroup6FBF16F1": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Automatically created Security Group for ELB mockservicefargateMyFargateServiceLBB0AB2B05",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "Allow from anyone on port 80",
                        "FromPort": 80,
                        "IpProtocol": "tcp",
                        "ToPort": 80
                    }
                ],
                "VpcId": {
                    "Ref": "MockServiceClusterVpc9E9957A9"
                }
            }
        },
        "MyFargateServiceLBSecurityGrouptomockservicefargateMyFargateServiceSecurityGroupB15AA756808023733768": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "Description": "Load balancer to target",
                "DestinationSecurityGroupId": {
                    "Fn::GetAtt": [
                        "MyFargateServiceSecurityGroup7016792A",
                        "GroupId"
                    ]
                },
                "FromPort": 8080,
                "GroupId": {
                    "Fn::GetAtt": [
                        "MyFargateServiceLBSecurityGroup6FBF16F1",
                        "GroupId"
                    ]
                },
                "IpProtocol": "tcp",
                "ToPort": 8080
            }
        },
        "MyFargateServiceLBPublicListener61A1042F": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "DefaultActions": [
                    {
                        "TargetGroupArn": {
                            "Ref": "MyFargateServiceLBPublicListenerECSGroup4A3EDF05"
                        },
                        "Type": "forward"
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "MyFargateServiceLBDE830E97"
                },
                "Port": 80,
                "Protocol": "HTTP"
            }
        },
        "MyFargateServiceLBPublicListenerECSGroup4A3EDF05": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "Port": 80,
                "Protocol": "HTTP",
                "TargetGroupAttributes": [
                    {
                        "Key": "stickiness.enabled",
                        "Value": "false"
                    }
                ],
                "TargetType": "ip",
                "VpcId": {
                    "Ref": "MockServiceClusterVpc9E9957A9"
                }
            }
        },
        "MyFargateServiceTaskDefTaskRole62C7D397": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                }
            }
        },
        "MyFargateServiceTaskDef5DA17B39": {
            "Type": "AWS::ECS::TaskDefinition",
            "Properties": {
                "ContainerDefinitions": [
                    {
                        "Essential": true,
                        "Image": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::AccountId"
                                    },
                                    ".dkr.ecr.",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    ".",
                                    {
                                        "Ref": "AWS::URLSuffix"
                                    },
                                    "/mock-service:latest"
                                ]
                            ]
                        },
                        "LogConfiguration": {
                            "LogDriver": "awslogs",
                            "Options": {
                                "awslogs-group": {
                                    "Ref": "MockServiceLogGroup408943F7"
                                },
                                "awslogs-stream-prefix": "MockServiceFargate",
                                "awslogs-region": {
                                    "Ref": "AWS::Region"
                                }
                            }
                        },
                        "Name": "web",
                        "PortMappings": [
                            {
                                "ContainerPort": 8080,
                                "Protocol": "tcp"
                            }
                        ]
                    }
                ],
                "Cpu": "256",
                "ExecutionRoleArn": {
                    "Fn::GetAtt": [
                        "MyFargateServiceTaskDefExecutionRoleD6305504",
                        "Arn"
                    ]
                },
                "Family": "mockservicefargateMyFargateServiceTaskDefF1BAA995",
                "Memory": "512",
                "NetworkMode": "awsvpc",
                "RequiresCompatibilities": [
                    "FARGATE"
                ],
                "TaskRoleArn": {
                    "Fn::GetAtt": [
                        "MyFargateServiceTaskDefTaskRole62C7D397",
                        "Arn"
                    ]
                }
            }
        },
        "MyFargateServiceTaskDefExecutionRoleD6305504": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                }
            }
        },
        "MyFargateServiceTaskDefExecutionRoleDefaultPolicyEC22B20F": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage"
                            ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:",
                                        {
                                            "Ref": "AWS::Partition"
                                        },
                                        ":ecr:",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":repository/mock-service"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": "ecr:GetAuthorizationToken",
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::GetAtt": [
                                    "MockServiceLogGroup408943F7",
                                    "Arn"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "MyFargateServiceTaskDefExecutionRoleDefaultPolicyEC22B20F",
                "Roles": [
                    {
                        "Ref": "MyFargateServiceTaskDefExecutionRoleD6305504"
                    }
                ]
            }
        },
        "MyFargateServiceF490C034": {
            "Type": "AWS::ECS::Service",
            "Properties": {
                "Cluster": {
                    "Ref": "MockServiceClusterE0421788"
                },
                "DeploymentConfiguration": {
                    "Alarms": {
                        "AlarmNames": [],
                        "Enable": false,
                        "Rollback": false
                    },
                    "MaximumPercent": 200,
                    "MinimumHealthyPercent": 50
                },
                "EnableECSManagedTags": false,
                "HealthCheckGracePeriodSeconds": 60,
                "LaunchType": "FARGATE",
                "LoadBalancers": [
                    {
                        "ContainerName": "web",
                        "ContainerPort": 8080,
                        "TargetGroupArn": {
                            "Ref": "MyFargateServiceLBPublicListenerECSGroup4A3EDF05"
                        }
                    }
                ],
                "NetworkConfiguration": {
                    "AwsvpcConfiguration": {
                        "AssignPublicIp": "DISABLED",
                        "SecurityGroups": [
                            {
                                "Fn::GetAtt": [
                                    "MyFargateServiceSecurityGroup7016792A",
                                    "GroupId"
                                ]
                            }
                        ],
                        "Subnets": [
                            {
                                "Ref": "MockServiceClusterVpcPrivateSubnet1Subnet795620A7"
                            },
                            {
                                "Ref": "MockServiceClusterVpcPrivateSubnet2Subnet7510FC2A"
                            }
                        ]
                    }
                },
                "TaskDefinition": {
                    "Ref": "MyFargateServiceTaskDef5DA17B39"
                }
            },
            "DependsOn": [
                "MyFargateServiceLBPublicListenerECSGroup4A3EDF05",
                "MyFargateServiceLBPublicListener61A1042F",
                "MyFargateServiceTaskDefTaskRole62C7D397"
            ]
        },
        "MyFargateServiceSecurityGroup7016792A": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "mock-service-fargate/MyFargateService/Service/SecurityGroup",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "Allow all outbound traffic by default",
                        "IpProtocol": "-1"
                    }
                ],
                "VpcId": {
                    "Ref": "MockServiceClusterVpc9E9957A9"
                }
            },
            "DependsOn": [
                "MyFargateServiceTaskDefTaskRole62C7D397"
            ]
        },
        "MyFargateServiceSecurityGroupfrommockservicefargateMyFargateServiceLBSecurityGroup730B146A8080B6A223A3": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "Description": "Load balancer to target",
                "FromPort": 8080,
                "GroupId": {
                    "Fn::GetAtt": [
                        "MyFargateServiceSecurityGroup7016792A",
                        "GroupId"
                    ]
                },
                "IpProtocol": "tcp",
                "SourceSecurityGroupId": {
                    "Fn::GetAtt": [
                        "MyFargateServiceLBSecurityGroup6FBF16F1",
                        "GroupId"
                    ]
                },
                "ToPort": 8080
            },
            "DependsOn": [
                "MyFargateServiceTaskDefTaskRole62C7D397"
            ]
        }
    },
    "Outputs": {
        "MyFargateServiceLoadBalancerDNS704F6391": {
            "Value": {
                "Fn::GetAtt": [
                    "MyFargateServiceLBDE830E97",
                    "DNSName"
                ]
            }
        },
        "MyFargateServiceServiceURL4CF8398A": {
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt": [
                                "MyFargateServiceLBDE830E97",
                                "DNSName"
                            ]
                        }
                    ]
                ]
            }
        }
    },
    "Parameters": {
        "BootstrapVersion": {
            "Type": "AWS::SSM::Parameter::Value<String>",
            "Default": "/cdk-bootstrap/hnb659fds/version",
            "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
        }
    },
    "Rules": {
        "CheckBootstrapVersion": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Not": [
                            {
                                "Fn::Contains": [
                                    [
                                        "1",
                                        "2",
                                        "3",
                                        "4",
                                        "5"
                                    ],
                                    {
                                        "Ref": "BootstrapVersion"
                                    }
                                ]
                            }
                        ]
                    },
                    "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
                }
            ]
        }
    }
}