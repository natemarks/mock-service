{
    "Resources": {
        "EKSMockServiceEksRole4802C9EB": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "eks.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonEKSClusterPolicy"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonEKSVPCResourceController"
                            ]
                        ]
                    }
                ]
            }
        },
        "kubectl290BBFC9": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
                "Content": {
                    "S3Bucket": {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                    },
                    "S3Key": "7e5f48d1e79c915595d938c932b6f0101715a162780d01a55845367e014fbcda.zip"
                },
                "Description": "/opt/kubectl/kubectl and /opt/helm/helm"
            }
        },
        "L2ClusterDefaultVpc44102E2B": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "EnableDnsHostnames": true,
                "EnableDnsSupport": true,
                "InstanceTenancy": "default",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "mock-service-eks/L2Cluster/DefaultVpc"
                    }
                ]
            }
        },
        "L2ClusterDefaultVpcPublicSubnet1Subnet857C1D30": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.0.0.0/18",
                "MapPublicIpOnLaunch": true,
                "Tags": [
                    {
                        "Key": "aws-cdk:subnet-name",
                        "Value": "Public"
                    },
                    {
                        "Key": "aws-cdk:subnet-type",
                        "Value": "Public"
                    },
                    {
                        "Key": "kubernetes.io/role/elb",
                        "Value": "1"
                    },
                    {
                        "Key": "Name",
                        "Value": "mock-service-eks/L2Cluster/DefaultVpc/PublicSubnet1"
                    }
                ],
                "VpcId": {
                    "Ref": "L2ClusterDefaultVpc44102E2B"
                }
            }
        },
        "L2ClusterDefaultVpcPublicSubnet1RouteTableA65531F7": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "Tags": [
                    {
                        "Key": "kubernetes.io/role/elb",
                        "Value": "1"
                    },
                    {
                        "Key": "Name",
                        "Value": "mock-service-eks/L2Cluster/DefaultVpc/PublicSubnet1"
                    }
                ],
                "VpcId": {
                    "Ref": "L2ClusterDefaultVpc44102E2B"
                }
            }
        },
        "L2ClusterDefaultVpcPublicSubnet1RouteTableAssociation5E65ABB8": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "L2ClusterDefaultVpcPublicSubnet1RouteTableA65531F7"
                },
                "SubnetId": {
                    "Ref": "L2ClusterDefaultVpcPublicSubnet1Subnet857C1D30"
                }
            }
        },
        "L2ClusterDefaultVpcPublicSubnet1DefaultRouteCEF50BBD": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "L2ClusterDefaultVpcIGWF0557348"
                },
                "RouteTableId": {
                    "Ref": "L2ClusterDefaultVpcPublicSubnet1RouteTableA65531F7"
                }
            },
            "DependsOn": [
                "L2ClusterDefaultVpcVPCGW614DEDC4"
            ]
        },
        "L2ClusterDefaultVpcPublicSubnet1EIP8EC560AE": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc",
                "Tags": [
                    {
                        "Key": "kubernetes.io/role/elb",
                        "Value": "1"
                    },
                    {
                        "Key": "Name",
                        "Value": "mock-service-eks/L2Cluster/DefaultVpc/PublicSubnet1"
                    }
                ]
            }
        },
        "L2ClusterDefaultVpcPublicSubnet1NATGatewayAEB9E701": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "L2ClusterDefaultVpcPublicSubnet1EIP8EC560AE",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "L2ClusterDefaultVpcPublicSubnet1Subnet857C1D30"
                },
                "Tags": [
                    {
                        "Key": "kubernetes.io/role/elb",
                        "Value": "1"
                    },
                    {
                        "Key": "Name",
                        "Value": "mock-service-eks/L2Cluster/DefaultVpc/PublicSubnet1"
                    }
                ]
            },
            "DependsOn": [
                "L2ClusterDefaultVpcPublicSubnet1DefaultRouteCEF50BBD",
                "L2ClusterDefaultVpcPublicSubnet1RouteTableAssociation5E65ABB8"
            ]
        },
        "L2ClusterDefaultVpcPublicSubnet2Subnet16C44607": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.0.64.0/18",
                "MapPublicIpOnLaunch": true,
                "Tags": [
                    {
                        "Key": "aws-cdk:subnet-name",
                        "Value": "Public"
                    },
                    {
                        "Key": "aws-cdk:subnet-type",
                        "Value": "Public"
                    },
                    {
                        "Key": "kubernetes.io/role/elb",
                        "Value": "1"
                    },
                    {
                        "Key": "Name",
                        "Value": "mock-service-eks/L2Cluster/DefaultVpc/PublicSubnet2"
                    }
                ],
                "VpcId": {
                    "Ref": "L2ClusterDefaultVpc44102E2B"
                }
            }
        },
        "L2ClusterDefaultVpcPublicSubnet2RouteTable0F39619A": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "Tags": [
                    {
                        "Key": "kubernetes.io/role/elb",
                        "Value": "1"
                    },
                    {
                        "Key": "Name",
                        "Value": "mock-service-eks/L2Cluster/DefaultVpc/PublicSubnet2"
                    }
                ],
                "VpcId": {
                    "Ref": "L2ClusterDefaultVpc44102E2B"
                }
            }
        },
        "L2ClusterDefaultVpcPublicSubnet2RouteTableAssociation03BEA7FE": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "L2ClusterDefaultVpcPublicSubnet2RouteTable0F39619A"
                },
                "SubnetId": {
                    "Ref": "L2ClusterDefaultVpcPublicSubnet2Subnet16C44607"
                }
            }
        },
        "L2ClusterDefaultVpcPublicSubnet2DefaultRouteB1074517": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "L2ClusterDefaultVpcIGWF0557348"
                },
                "RouteTableId": {
                    "Ref": "L2ClusterDefaultVpcPublicSubnet2RouteTable0F39619A"
                }
            },
            "DependsOn": [
                "L2ClusterDefaultVpcVPCGW614DEDC4"
            ]
        },
        "L2ClusterDefaultVpcPublicSubnet2EIP0BEBAC62": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc",
                "Tags": [
                    {
                        "Key": "kubernetes.io/role/elb",
                        "Value": "1"
                    },
                    {
                        "Key": "Name",
                        "Value": "mock-service-eks/L2Cluster/DefaultVpc/PublicSubnet2"
                    }
                ]
            }
        },
        "L2ClusterDefaultVpcPublicSubnet2NATGateway1D3065E7": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "L2ClusterDefaultVpcPublicSubnet2EIP0BEBAC62",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "L2ClusterDefaultVpcPublicSubnet2Subnet16C44607"
                },
                "Tags": [
                    {
                        "Key": "kubernetes.io/role/elb",
                        "Value": "1"
                    },
                    {
                        "Key": "Name",
                        "Value": "mock-service-eks/L2Cluster/DefaultVpc/PublicSubnet2"
                    }
                ]
            },
            "DependsOn": [
                "L2ClusterDefaultVpcPublicSubnet2DefaultRouteB1074517",
                "L2ClusterDefaultVpcPublicSubnet2RouteTableAssociation03BEA7FE"
            ]
        },
        "L2ClusterDefaultVpcPrivateSubnet1Subnet996A127D": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.0.128.0/18",
                "MapPublicIpOnLaunch": false,
                "Tags": [
                    {
                        "Key": "aws-cdk:subnet-name",
                        "Value": "Private"
                    },
                    {
                        "Key": "aws-cdk:subnet-type",
                        "Value": "Private"
                    },
                    {
                        "Key": "kubernetes.io/role/internal-elb",
                        "Value": "1"
                    },
                    {
                        "Key": "Name",
                        "Value": "mock-service-eks/L2Cluster/DefaultVpc/PrivateSubnet1"
                    }
                ],
                "VpcId": {
                    "Ref": "L2ClusterDefaultVpc44102E2B"
                }
            }
        },
        "L2ClusterDefaultVpcPrivateSubnet1RouteTableE7E035B3": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "Tags": [
                    {
                        "Key": "kubernetes.io/role/internal-elb",
                        "Value": "1"
                    },
                    {
                        "Key": "Name",
                        "Value": "mock-service-eks/L2Cluster/DefaultVpc/PrivateSubnet1"
                    }
                ],
                "VpcId": {
                    "Ref": "L2ClusterDefaultVpc44102E2B"
                }
            }
        },
        "L2ClusterDefaultVpcPrivateSubnet1RouteTableAssociation732943AC": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "L2ClusterDefaultVpcPrivateSubnet1RouteTableE7E035B3"
                },
                "SubnetId": {
                    "Ref": "L2ClusterDefaultVpcPrivateSubnet1Subnet996A127D"
                }
            }
        },
        "L2ClusterDefaultVpcPrivateSubnet1DefaultRoute9D9B2E01": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "L2ClusterDefaultVpcPublicSubnet1NATGatewayAEB9E701"
                },
                "RouteTableId": {
                    "Ref": "L2ClusterDefaultVpcPrivateSubnet1RouteTableE7E035B3"
                }
            }
        },
        "L2ClusterDefaultVpcPrivateSubnet2SubnetFBB3127B": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.0.192.0/18",
                "MapPublicIpOnLaunch": false,
                "Tags": [
                    {
                        "Key": "aws-cdk:subnet-name",
                        "Value": "Private"
                    },
                    {
                        "Key": "aws-cdk:subnet-type",
                        "Value": "Private"
                    },
                    {
                        "Key": "kubernetes.io/role/internal-elb",
                        "Value": "1"
                    },
                    {
                        "Key": "Name",
                        "Value": "mock-service-eks/L2Cluster/DefaultVpc/PrivateSubnet2"
                    }
                ],
                "VpcId": {
                    "Ref": "L2ClusterDefaultVpc44102E2B"
                }
            }
        },
        "L2ClusterDefaultVpcPrivateSubnet2RouteTable8F574DC9": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "Tags": [
                    {
                        "Key": "kubernetes.io/role/internal-elb",
                        "Value": "1"
                    },
                    {
                        "Key": "Name",
                        "Value": "mock-service-eks/L2Cluster/DefaultVpc/PrivateSubnet2"
                    }
                ],
                "VpcId": {
                    "Ref": "L2ClusterDefaultVpc44102E2B"
                }
            }
        },
        "L2ClusterDefaultVpcPrivateSubnet2RouteTableAssociationC20C2C5B": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "L2ClusterDefaultVpcPrivateSubnet2RouteTable8F574DC9"
                },
                "SubnetId": {
                    "Ref": "L2ClusterDefaultVpcPrivateSubnet2SubnetFBB3127B"
                }
            }
        },
        "L2ClusterDefaultVpcPrivateSubnet2DefaultRoute0265B3F6": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "L2ClusterDefaultVpcPublicSubnet2NATGateway1D3065E7"
                },
                "RouteTableId": {
                    "Ref": "L2ClusterDefaultVpcPrivateSubnet2RouteTable8F574DC9"
                }
            }
        },
        "L2ClusterDefaultVpcIGWF0557348": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "mock-service-eks/L2Cluster/DefaultVpc"
                    }
                ]
            }
        },
        "L2ClusterDefaultVpcVPCGW614DEDC4": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "L2ClusterDefaultVpcIGWF0557348"
                },
                "VpcId": {
                    "Ref": "L2ClusterDefaultVpc44102E2B"
                }
            }
        },
        "L2ClusterKubectlHandlerRole9705E905": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
                            ]
                        ]
                    },
                    {
                        "Fn::If": [
                            "L2ClusterHasEcrPublic10C4760A",
                            {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:",
                                        {
                                            "Ref": "AWS::Partition"
                                        },
                                        ":iam::aws:policy/AmazonElasticContainerRegistryPublicReadOnly"
                                    ]
                                ]
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "L2ClusterKubectlHandlerRoleDefaultPolicyF3ABAF35": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "eks:DescribeCluster",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::GetAtt": [
                                    "L2ClusterE60998BB",
                                    "Arn"
                                ]
                            }
                        },
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::GetAtt": [
                                    "L2ClusterCreationRoleFCDE87E9",
                                    "Arn"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "L2ClusterKubectlHandlerRoleDefaultPolicyF3ABAF35",
                "Roles": [
                    {
                        "Ref": "L2ClusterKubectlHandlerRole9705E905"
                    }
                ]
            }
        },
        "L2ClusterControlPlaneSecurityGroup9A4DB4C6": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "EKS Control Plane Security Group",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "Allow all outbound traffic by default",
                        "IpProtocol": "-1"
                    }
                ],
                "VpcId": {
                    "Ref": "L2ClusterDefaultVpc44102E2B"
                }
            }
        },
        "L2ClusterCreationRoleFCDE87E9": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {
                                    "Fn::GetAtt": [
                                        "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
                                        "Outputs.mockserviceeksawscdkawseksClusterResourceProviderOnEventHandlerServiceRoleB31AB2FEArn"
                                    ]
                                }
                            }
                        },
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {
                                    "Fn::GetAtt": [
                                        "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
                                        "Outputs.mockserviceeksawscdkawseksClusterResourceProviderIsCompleteHandlerServiceRole1B662BF7Arn"
                                    ]
                                }
                            }
                        },
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {
                                    "Fn::GetAtt": [
                                        "L2ClusterKubectlHandlerRole9705E905",
                                        "Arn"
                                    ]
                                }
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                }
            },
            "DependsOn": [
                "L2ClusterDefaultVpcIGWF0557348",
                "L2ClusterDefaultVpcPrivateSubnet1DefaultRoute9D9B2E01",
                "L2ClusterDefaultVpcPrivateSubnet1RouteTableE7E035B3",
                "L2ClusterDefaultVpcPrivateSubnet1RouteTableAssociation732943AC",
                "L2ClusterDefaultVpcPrivateSubnet1Subnet996A127D",
                "L2ClusterDefaultVpcPrivateSubnet2DefaultRoute0265B3F6",
                "L2ClusterDefaultVpcPrivateSubnet2RouteTable8F574DC9",
                "L2ClusterDefaultVpcPrivateSubnet2RouteTableAssociationC20C2C5B",
                "L2ClusterDefaultVpcPrivateSubnet2SubnetFBB3127B",
                "L2ClusterDefaultVpcPublicSubnet1DefaultRouteCEF50BBD",
                "L2ClusterDefaultVpcPublicSubnet1EIP8EC560AE",
                "L2ClusterDefaultVpcPublicSubnet1NATGatewayAEB9E701",
                "L2ClusterDefaultVpcPublicSubnet1RouteTableA65531F7",
                "L2ClusterDefaultVpcPublicSubnet1RouteTableAssociation5E65ABB8",
                "L2ClusterDefaultVpcPublicSubnet1Subnet857C1D30",
                "L2ClusterDefaultVpcPublicSubnet2DefaultRouteB1074517",
                "L2ClusterDefaultVpcPublicSubnet2EIP0BEBAC62",
                "L2ClusterDefaultVpcPublicSubnet2NATGateway1D3065E7",
                "L2ClusterDefaultVpcPublicSubnet2RouteTable0F39619A",
                "L2ClusterDefaultVpcPublicSubnet2RouteTableAssociation03BEA7FE",
                "L2ClusterDefaultVpcPublicSubnet2Subnet16C44607",
                "L2ClusterDefaultVpc44102E2B",
                "L2ClusterDefaultVpcVPCGW614DEDC4"
            ]
        },
        "L2ClusterCreationRoleDefaultPolicyF2E824A1": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "iam:PassRole",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::GetAtt": [
                                    "EKSMockServiceEksRole4802C9EB",
                                    "Arn"
                                ]
                            }
                        },
                        {
                            "Action": [
                                "eks:CreateCluster",
                                "eks:DescribeCluster",
                                "eks:DescribeUpdate",
                                "eks:DeleteCluster",
                                "eks:UpdateClusterVersion",
                                "eks:UpdateClusterConfig",
                                "eks:CreateFargateProfile",
                                "eks:TagResource",
                                "eks:UntagResource"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:",
                                            {
                                                "Ref": "AWS::Partition"
                                            },
                                            ":eks:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":cluster/mock-service"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:",
                                            {
                                                "Ref": "AWS::Partition"
                                            },
                                            ":eks:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":cluster/mock-service/*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": [
                                "eks:DescribeFargateProfile",
                                "eks:DeleteFargateProfile"
                            ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:",
                                        {
                                            "Ref": "AWS::Partition"
                                        },
                                        ":eks:",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":fargateprofile/mock-service/*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": [
                                "iam:GetRole",
                                "iam:listAttachedRolePolicies"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "iam:CreateServiceLinkedRole",
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "ec2:DescribeInstances",
                                "ec2:DescribeNetworkInterfaces",
                                "ec2:DescribeSecurityGroups",
                                "ec2:DescribeSubnets",
                                "ec2:DescribeRouteTables",
                                "ec2:DescribeDhcpOptions",
                                "ec2:DescribeVpcs"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "L2ClusterCreationRoleDefaultPolicyF2E824A1",
                "Roles": [
                    {
                        "Ref": "L2ClusterCreationRoleFCDE87E9"
                    }
                ]
            },
            "DependsOn": [
                "L2ClusterDefaultVpcIGWF0557348",
                "L2ClusterDefaultVpcPrivateSubnet1DefaultRoute9D9B2E01",
                "L2ClusterDefaultVpcPrivateSubnet1RouteTableE7E035B3",
                "L2ClusterDefaultVpcPrivateSubnet1RouteTableAssociation732943AC",
                "L2ClusterDefaultVpcPrivateSubnet1Subnet996A127D",
                "L2ClusterDefaultVpcPrivateSubnet2DefaultRoute0265B3F6",
                "L2ClusterDefaultVpcPrivateSubnet2RouteTable8F574DC9",
                "L2ClusterDefaultVpcPrivateSubnet2RouteTableAssociationC20C2C5B",
                "L2ClusterDefaultVpcPrivateSubnet2SubnetFBB3127B",
                "L2ClusterDefaultVpcPublicSubnet1DefaultRouteCEF50BBD",
                "L2ClusterDefaultVpcPublicSubnet1EIP8EC560AE",
                "L2ClusterDefaultVpcPublicSubnet1NATGatewayAEB9E701",
                "L2ClusterDefaultVpcPublicSubnet1RouteTableA65531F7",
                "L2ClusterDefaultVpcPublicSubnet1RouteTableAssociation5E65ABB8",
                "L2ClusterDefaultVpcPublicSubnet1Subnet857C1D30",
                "L2ClusterDefaultVpcPublicSubnet2DefaultRouteB1074517",
                "L2ClusterDefaultVpcPublicSubnet2EIP0BEBAC62",
                "L2ClusterDefaultVpcPublicSubnet2NATGateway1D3065E7",
                "L2ClusterDefaultVpcPublicSubnet2RouteTable0F39619A",
                "L2ClusterDefaultVpcPublicSubnet2RouteTableAssociation03BEA7FE",
                "L2ClusterDefaultVpcPublicSubnet2Subnet16C44607",
                "L2ClusterDefaultVpc44102E2B",
                "L2ClusterDefaultVpcVPCGW614DEDC4"
            ]
        },
        "L2ClusterE60998BB": {
            "Type": "Custom::AWSCDK-EKS-Cluster",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
                        "Outputs.mockserviceeksawscdkawseksClusterResourceProviderframeworkonEvent0D9B49F3Arn"
                    ]
                },
                "Config": {
                    "name": "mock-service",
                    "version": "1.30",
                    "roleArn": {
                        "Fn::GetAtt": [
                            "EKSMockServiceEksRole4802C9EB",
                            "Arn"
                        ]
                    },
                    "kubernetesNetworkConfig": {
                        "ipFamily": "ipv4"
                    },
                    "resourcesVpcConfig": {
                        "subnetIds": [
                            {
                                "Ref": "L2ClusterDefaultVpcPrivateSubnet1Subnet996A127D"
                            },
                            {
                                "Ref": "L2ClusterDefaultVpcPrivateSubnet2SubnetFBB3127B"
                            }
                        ],
                        "securityGroupIds": [
                            {
                                "Fn::GetAtt": [
                                    "L2ClusterControlPlaneSecurityGroup9A4DB4C6",
                                    "GroupId"
                                ]
                            }
                        ],
                        "endpointPublicAccess": true,
                        "endpointPrivateAccess": true
                    },
                    "accessConfig": {
                        "authenticationMode": "API_AND_CONFIG_MAP",
                        "bootstrapClusterCreatorAdminPermissions": true
                    }
                },
                "AssumeRoleArn": {
                    "Fn::GetAtt": [
                        "L2ClusterCreationRoleFCDE87E9",
                        "Arn"
                    ]
                },
                "AttributesRevision": 3
            },
            "DependsOn": [
                "L2ClusterDefaultVpcIGWF0557348",
                "L2ClusterDefaultVpcPrivateSubnet1DefaultRoute9D9B2E01",
                "L2ClusterDefaultVpcPrivateSubnet1RouteTableE7E035B3",
                "L2ClusterDefaultVpcPrivateSubnet1RouteTableAssociation732943AC",
                "L2ClusterDefaultVpcPrivateSubnet1Subnet996A127D",
                "L2ClusterDefaultVpcPrivateSubnet2DefaultRoute0265B3F6",
                "L2ClusterDefaultVpcPrivateSubnet2RouteTable8F574DC9",
                "L2ClusterDefaultVpcPrivateSubnet2RouteTableAssociationC20C2C5B",
                "L2ClusterDefaultVpcPrivateSubnet2SubnetFBB3127B",
                "L2ClusterDefaultVpcPublicSubnet1DefaultRouteCEF50BBD",
                "L2ClusterDefaultVpcPublicSubnet1EIP8EC560AE",
                "L2ClusterDefaultVpcPublicSubnet1NATGatewayAEB9E701",
                "L2ClusterDefaultVpcPublicSubnet1RouteTableA65531F7",
                "L2ClusterDefaultVpcPublicSubnet1RouteTableAssociation5E65ABB8",
                "L2ClusterDefaultVpcPublicSubnet1Subnet857C1D30",
                "L2ClusterDefaultVpcPublicSubnet2DefaultRouteB1074517",
                "L2ClusterDefaultVpcPublicSubnet2EIP0BEBAC62",
                "L2ClusterDefaultVpcPublicSubnet2NATGateway1D3065E7",
                "L2ClusterDefaultVpcPublicSubnet2RouteTable0F39619A",
                "L2ClusterDefaultVpcPublicSubnet2RouteTableAssociation03BEA7FE",
                "L2ClusterDefaultVpcPublicSubnet2Subnet16C44607",
                "L2ClusterDefaultVpc44102E2B",
                "L2ClusterDefaultVpcVPCGW614DEDC4",
                "L2ClusterCreationRoleDefaultPolicyF2E824A1",
                "L2ClusterCreationRoleFCDE87E9"
            ],
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete"
        },
        "L2ClusterKubectlReadyBarrier1037A14D": {
            "Type": "AWS::SSM::Parameter",
            "Properties": {
                "Type": "String",
                "Value": "aws:cdk:eks:kubectl-ready"
            },
            "DependsOn": [
                "L2ClusterCreationRoleDefaultPolicyF2E824A1",
                "L2ClusterCreationRoleFCDE87E9",
                "L2ClusterE60998BB"
            ]
        },
        "L2ClusterNodegroupDefaultCapacityNodeGroupRole5B0EBFD8": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ec2.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonEKSWorkerNodePolicy"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonEKS_CNI_Policy"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
                            ]
                        ]
                    }
                ]
            }
        },
        "L2ClusterNodegroupDefaultCapacityF4BA7623": {
            "Type": "AWS::EKS::Nodegroup",
            "Properties": {
                "AmiType": "AL2_x86_64",
                "ClusterName": {
                    "Ref": "L2ClusterE60998BB"
                },
                "ForceUpdateEnabled": true,
                "InstanceTypes": [
                    "m5.large"
                ],
                "NodeRole": {
                    "Fn::GetAtt": [
                        "L2ClusterNodegroupDefaultCapacityNodeGroupRole5B0EBFD8",
                        "Arn"
                    ]
                },
                "ScalingConfig": {
                    "DesiredSize": 2,
                    "MaxSize": 2,
                    "MinSize": 2
                },
                "Subnets": [
                    {
                        "Ref": "L2ClusterDefaultVpcPrivateSubnet1Subnet996A127D"
                    },
                    {
                        "Ref": "L2ClusterDefaultVpcPrivateSubnet2SubnetFBB3127B"
                    }
                ]
            }
        },
        "L2ClusterAwsAuthmanifestFE4DC393": {
            "Type": "Custom::AWSCDK-EKS-KubernetesResource",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
                        "Outputs.mockserviceeksawscdkawseksKubectlProviderframeworkonEvent23CDAF83Arn"
                    ]
                },
                "Manifest": {
                    "Fn::Join": [
                        "",
                        [
                            "[{\"apiVersion\":\"v1\",\"kind\":\"ConfigMap\",\"metadata\":{\"name\":\"aws-auth\",\"namespace\":\"kube-system\",\"labels\":{\"aws.cdk.eks/prune-c8d1cddda5f4423ba0c2a56912246d8e1c51c2f527\":\"\"}},\"data\":{\"mapRoles\":\"[{\\\"rolearn\\\":\\\"",
                            {
                                "Fn::GetAtt": [
                                    "L2ClusterNodegroupDefaultCapacityNodeGroupRole5B0EBFD8",
                                    "Arn"
                                ]
                            },
                            "\\\",\\\"username\\\":\\\"system:node:{{EC2PrivateDNSName}}\\\",\\\"groups\\\":[\\\"system:bootstrappers\\\",\\\"system:nodes\\\"]}]\",\"mapUsers\":\"[]\",\"mapAccounts\":\"[]\"}}]"
                        ]
                    ]
                },
                "ClusterName": {
                    "Ref": "L2ClusterE60998BB"
                },
                "RoleArn": {
                    "Fn::GetAtt": [
                        "L2ClusterCreationRoleFCDE87E9",
                        "Arn"
                    ]
                },
                "PruneLabel": "aws.cdk.eks/prune-c8d1cddda5f4423ba0c2a56912246d8e1c51c2f527",
                "Overwrite": true
            },
            "DependsOn": [
                "L2ClusterKubectlReadyBarrier1037A14D"
            ],
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete"
        },
        "L2ClustermanifesteksPod8A9BDACA": {
            "Type": "Custom::AWSCDK-EKS-KubernetesResource",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
                        "Outputs.mockserviceeksawscdkawseksKubectlProviderframeworkonEvent23CDAF83Arn"
                    ]
                },
                "Manifest": {
                    "Fn::Join": [
                        "",
                        [
                            "[{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"name\":\"mock-service\",\"labels\":{\"aws.cdk.eks/prune-c84219521897b9d3c128e32791d19afedb29901c86\":\"\"}},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"mock-service\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"mock-service\"}},\"spec\":{\"containers\":[{\"name\":\"mock-service\",\"image\":\"",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ".dkr.ecr.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".",
                            {
                                "Ref": "AWS::URLSuffix"
                            },
                            "/mock-service:latest\",\"ports\":[{\"containerPort\":8080}]}]}}}}]"
                        ]
                    ]
                },
                "ClusterName": {
                    "Ref": "L2ClusterE60998BB"
                },
                "RoleArn": {
                    "Fn::GetAtt": [
                        "L2ClusterCreationRoleFCDE87E9",
                        "Arn"
                    ]
                },
                "PruneLabel": "aws.cdk.eks/prune-c84219521897b9d3c128e32791d19afedb29901c86"
            },
            "DependsOn": [
                "L2ClusterKubectlReadyBarrier1037A14D"
            ],
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete"
        },
        "L2ClusterOpenIdConnectProvider5FA8BEC0": {
            "Type": "Custom::AWSCDKOpenIdConnectProvider",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0",
                        "Arn"
                    ]
                },
                "ClientIDList": [
                    "sts.amazonaws.com"
                ],
                "Url": {
                    "Fn::GetAtt": [
                        "L2ClusterE60998BB",
                        "OpenIdConnectIssuerUrl"
                    ]
                },
                "CodeHash": "977fc1649d2dbcce16e23f6332faef6fa0f48aa74a0afe35f4a3467754e20cd8"
            },
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete"
        },
        "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "",
                        [
                            "https://s3.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".",
                            {
                                "Ref": "AWS::URLSuffix"
                            },
                            "/",
                            {
                                "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                            },
                            "/89fbe9a500d02dc0a962bf53ee613bcb66433586fffff9196d2ec4aa00aa58ab.json"
                        ]
                    ]
                }
            },
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete"
        },
        "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "referencetomockserviceekskubectl2951C3E4Ref": {
                        "Ref": "kubectl290BBFC9"
                    },
                    "referencetomockserviceeksL2ClusterKubectlHandlerRole98B4E970Arn": {
                        "Fn::GetAtt": [
                            "L2ClusterKubectlHandlerRole9705E905",
                            "Arn"
                        ]
                    },
                    "referencetomockserviceeksL2ClusterDefaultVpcPrivateSubnet1SubnetB962C3C8Ref": {
                        "Ref": "L2ClusterDefaultVpcPrivateSubnet1Subnet996A127D"
                    },
                    "referencetomockserviceeksL2ClusterDefaultVpcPrivateSubnet2Subnet339CE7B7Ref": {
                        "Ref": "L2ClusterDefaultVpcPrivateSubnet2SubnetFBB3127B"
                    },
                    "referencetomockserviceeksL2Cluster25EB720AClusterSecurityGroupId": {
                        "Fn::GetAtt": [
                            "L2ClusterE60998BB",
                            "ClusterSecurityGroupId"
                        ]
                    }
                },
                "TemplateURL": {
                    "Fn::Join": [
                        "",
                        [
                            "https://s3.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".",
                            {
                                "Ref": "AWS::URLSuffix"
                            },
                            "/",
                            {
                                "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                            },
                            "/cb0bc4b08bc57564558beb64bd0c99c162b9a77d45a45f0ab3bfb8a3ad155a9a.json"
                        ]
                    ]
                }
            },
            "DependsOn": [
                "L2ClusterDefaultVpcPrivateSubnet1DefaultRoute9D9B2E01",
                "L2ClusterDefaultVpcPrivateSubnet1RouteTableAssociation732943AC",
                "L2ClusterDefaultVpcPrivateSubnet2DefaultRoute0265B3F6",
                "L2ClusterDefaultVpcPrivateSubnet2RouteTableAssociationC20C2C5B",
                "L2ClusterKubectlHandlerRoleDefaultPolicyF3ABAF35",
                "L2ClusterKubectlHandlerRole9705E905"
            ],
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete"
        },
        "EKSMockServiceALBControlleralbsaConditionJson9A75689E": {
            "Type": "Custom::AWSCDKCfnJson",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
                        "Arn"
                    ]
                },
                "Value": {
                    "Fn::Join": [
                        "",
                        [
                            "{\"",
                            {
                                "Fn::Select": [
                                    1,
                                    {
                                        "Fn::Split": [
                                            ":oidc-provider/",
                                            {
                                                "Ref": "L2ClusterOpenIdConnectProvider5FA8BEC0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            ":aud\":\"sts.amazonaws.com\",\"",
                            {
                                "Fn::Select": [
                                    1,
                                    {
                                        "Fn::Split": [
                                            ":oidc-provider/",
                                            {
                                                "Ref": "L2ClusterOpenIdConnectProvider5FA8BEC0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            ":sub\":\"system:serviceaccount:kube-system:aws-load-balancer-controller\"}"
                        ]
                    ]
                }
            },
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete"
        },
        "EKSMockServiceALBControlleralbsaRole65D5D0B4": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRoleWithWebIdentity",
                            "Condition": {
                                "StringEquals": {
                                    "Fn::GetAtt": [
                                        "EKSMockServiceALBControlleralbsaConditionJson9A75689E",
                                        "Value"
                                    ]
                                }
                            },
                            "Effect": "Allow",
                            "Principal": {
                                "Federated": {
                                    "Ref": "L2ClusterOpenIdConnectProvider5FA8BEC0"
                                }
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                }
            }
        },
        "EKSMockServiceALBControlleralbsaRoleDefaultPolicyFF96705E": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "iam:CreateServiceLinkedRole",
                            "Condition": {
                                "StringEquals": {
                                    "iam:AWSServiceName": "elasticloadbalancing.amazonaws.com"
                                }
                            },
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "ec2:DescribeAccountAttributes",
                                "ec2:DescribeAddresses",
                                "ec2:DescribeAvailabilityZones",
                                "ec2:DescribeInternetGateways",
                                "ec2:DescribeVpcs",
                                "ec2:DescribeVpcPeeringConnections",
                                "ec2:DescribeSubnets",
                                "ec2:DescribeSecurityGroups",
                                "ec2:DescribeInstances",
                                "ec2:DescribeNetworkInterfaces",
                                "ec2:DescribeTags",
                                "ec2:GetCoipPoolUsage",
                                "ec2:DescribeCoipPools",
                                "elasticloadbalancing:DescribeLoadBalancers",
                                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                                "elasticloadbalancing:DescribeListeners",
                                "elasticloadbalancing:DescribeListenerCertificates",
                                "elasticloadbalancing:DescribeSSLPolicies",
                                "elasticloadbalancing:DescribeRules",
                                "elasticloadbalancing:DescribeTargetGroups",
                                "elasticloadbalancing:DescribeTargetGroupAttributes",
                                "elasticloadbalancing:DescribeTargetHealth",
                                "elasticloadbalancing:DescribeTags"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "cognito-idp:DescribeUserPoolClient",
                                "acm:ListCertificates",
                                "acm:DescribeCertificate",
                                "iam:ListServerCertificates",
                                "iam:GetServerCertificate",
                                "waf-regional:GetWebACL",
                                "waf-regional:GetWebACLForResource",
                                "waf-regional:AssociateWebACL",
                                "waf-regional:DisassociateWebACL",
                                "wafv2:GetWebACL",
                                "wafv2:GetWebACLForResource",
                                "wafv2:AssociateWebACL",
                                "wafv2:DisassociateWebACL",
                                "shield:GetSubscriptionState",
                                "shield:DescribeProtection",
                                "shield:CreateProtection",
                                "shield:DeleteProtection"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "ec2:AuthorizeSecurityGroupIngress",
                                "ec2:RevokeSecurityGroupIngress"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "ec2:CreateSecurityGroup",
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "ec2:CreateTags",
                            "Condition": {
                                "StringEquals": {
                                    "ec2:CreateAction": "CreateSecurityGroup"
                                },
                                "Null": {
                                    "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
                                }
                            },
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:",
                                        {
                                            "Ref": "AWS::Partition"
                                        },
                                        ":ec2:*:*:security-group/*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": [
                                "ec2:CreateTags",
                                "ec2:DeleteTags"
                            ],
                            "Condition": {
                                "Null": {
                                    "aws:RequestTag/elbv2.k8s.aws/cluster": "true",
                                    "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                                }
                            },
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:",
                                        {
                                            "Ref": "AWS::Partition"
                                        },
                                        ":ec2:*:*:security-group/*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": [
                                "ec2:AuthorizeSecurityGroupIngress",
                                "ec2:RevokeSecurityGroupIngress",
                                "ec2:DeleteSecurityGroup"
                            ],
                            "Condition": {
                                "Null": {
                                    "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                                }
                            },
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "elasticloadbalancing:CreateLoadBalancer",
                                "elasticloadbalancing:CreateTargetGroup"
                            ],
                            "Condition": {
                                "Null": {
                                    "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
                                }
                            },
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "elasticloadbalancing:CreateListener",
                                "elasticloadbalancing:DeleteListener",
                                "elasticloadbalancing:CreateRule",
                                "elasticloadbalancing:DeleteRule"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "elasticloadbalancing:AddTags",
                                "elasticloadbalancing:RemoveTags"
                            ],
                            "Condition": {
                                "Null": {
                                    "aws:RequestTag/elbv2.k8s.aws/cluster": "true",
                                    "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                                }
                            },
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:",
                                            {
                                                "Ref": "AWS::Partition"
                                            },
                                            ":elasticloadbalancing:*:*:targetgroup/*/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:",
                                            {
                                                "Ref": "AWS::Partition"
                                            },
                                            ":elasticloadbalancing:*:*:loadbalancer/net/*/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:",
                                            {
                                                "Ref": "AWS::Partition"
                                            },
                                            ":elasticloadbalancing:*:*:loadbalancer/app/*/*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": [
                                "elasticloadbalancing:AddTags",
                                "elasticloadbalancing:RemoveTags"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:",
                                            {
                                                "Ref": "AWS::Partition"
                                            },
                                            ":elasticloadbalancing:*:*:listener/net/*/*/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:",
                                            {
                                                "Ref": "AWS::Partition"
                                            },
                                            ":elasticloadbalancing:*:*:listener/app/*/*/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:",
                                            {
                                                "Ref": "AWS::Partition"
                                            },
                                            ":elasticloadbalancing:*:*:listener-rule/net/*/*/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:",
                                            {
                                                "Ref": "AWS::Partition"
                                            },
                                            ":elasticloadbalancing:*:*:listener-rule/app/*/*/*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": [
                                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                                "elasticloadbalancing:SetIpAddressType",
                                "elasticloadbalancing:SetSecurityGroups",
                                "elasticloadbalancing:SetSubnets",
                                "elasticloadbalancing:DeleteLoadBalancer",
                                "elasticloadbalancing:ModifyTargetGroup",
                                "elasticloadbalancing:ModifyTargetGroupAttributes",
                                "elasticloadbalancing:DeleteTargetGroup"
                            ],
                            "Condition": {
                                "Null": {
                                    "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                                }
                            },
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "elasticloadbalancing:AddTags",
                            "Condition": {
                                "StringEquals": {
                                    "elasticloadbalancing:CreateAction": [
                                        "CreateTargetGroup",
                                        "CreateLoadBalancer"
                                    ]
                                },
                                "Null": {
                                    "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
                                }
                            },
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:",
                                            {
                                                "Ref": "AWS::Partition"
                                            },
                                            ":elasticloadbalancing:*:*:targetgroup/*/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:",
                                            {
                                                "Ref": "AWS::Partition"
                                            },
                                            ":elasticloadbalancing:*:*:loadbalancer/net/*/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:",
                                            {
                                                "Ref": "AWS::Partition"
                                            },
                                            ":elasticloadbalancing:*:*:loadbalancer/app/*/*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": [
                                "elasticloadbalancing:RegisterTargets",
                                "elasticloadbalancing:DeregisterTargets"
                            ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:",
                                        {
                                            "Ref": "AWS::Partition"
                                        },
                                        ":elasticloadbalancing:*:*:targetgroup/*/*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": [
                                "elasticloadbalancing:SetWebAcl",
                                "elasticloadbalancing:ModifyListener",
                                "elasticloadbalancing:AddListenerCertificates",
                                "elasticloadbalancing:RemoveListenerCertificates",
                                "elasticloadbalancing:ModifyRule"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "EKSMockServiceALBControlleralbsaRoleDefaultPolicyFF96705E",
                "Roles": [
                    {
                        "Ref": "EKSMockServiceALBControlleralbsaRole65D5D0B4"
                    }
                ]
            }
        },
        "EKSMockServiceALBControlleralbsamanifestalbsaServiceAccountResourceB5984FF5": {
            "Type": "Custom::AWSCDK-EKS-KubernetesResource",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
                        "Outputs.mockserviceeksawscdkawseksKubectlProviderframeworkonEvent23CDAF83Arn"
                    ]
                },
                "Manifest": {
                    "Fn::Join": [
                        "",
                        [
                            "[{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"name\":\"aws-load-balancer-controller\",\"namespace\":\"kube-system\",\"labels\":{\"aws.cdk.eks/prune-c8a73ad69f4e83e4863ab50a4bab03b7f2945cc6f6\":\"\",\"app.kubernetes.io/name\":\"aws-load-balancer-controller\"},\"annotations\":{\"eks.amazonaws.com/role-arn\":\"",
                            {
                                "Fn::GetAtt": [
                                    "EKSMockServiceALBControlleralbsaRole65D5D0B4",
                                    "Arn"
                                ]
                            },
                            "\"}}}]"
                        ]
                    ]
                },
                "ClusterName": {
                    "Ref": "L2ClusterE60998BB"
                },
                "RoleArn": {
                    "Fn::GetAtt": [
                        "L2ClusterCreationRoleFCDE87E9",
                        "Arn"
                    ]
                },
                "PruneLabel": "aws.cdk.eks/prune-c8a73ad69f4e83e4863ab50a4bab03b7f2945cc6f6"
            },
            "DependsOn": [
                "L2ClusterKubectlReadyBarrier1037A14D"
            ],
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete"
        },
        "EKSMockServiceALBController0D36BE73": {
            "Type": "Custom::AWSCDK-EKS-HelmChart",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
                        "Outputs.mockserviceeksawscdkawseksKubectlProviderframeworkonEvent23CDAF83Arn"
                    ]
                },
                "ClusterName": {
                    "Ref": "L2ClusterE60998BB"
                },
                "RoleArn": {
                    "Fn::GetAtt": [
                        "L2ClusterCreationRoleFCDE87E9",
                        "Arn"
                    ]
                },
                "Release": "aws-load-balancer-controller",
                "Chart": "aws-load-balancer-controller",
                "Version": "1.6.2",
                "Wait": true,
                "Timeout": "900s",
                "Values": {
                    "Fn::Join": [
                        "",
                        [
                            "{\"clusterName\":\"",
                            {
                                "Ref": "L2ClusterE60998BB"
                            },
                            "\",\"serviceAccount\":{\"create\":false,\"name\":\"aws-load-balancer-controller\"},\"region\":\"",
                            {
                                "Ref": "AWS::Region"
                            },
                            "\",\"vpcId\":\"",
                            {
                                "Ref": "L2ClusterDefaultVpc44102E2B"
                            },
                            "\",\"image\":{\"repository\":\"602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/aws-load-balancer-controller\",\"tag\":\"v2.6.2\"}}"
                        ]
                    ]
                },
                "Namespace": "kube-system",
                "Repository": "https://aws.github.io/eks-charts",
                "CreateNamespace": true
            },
            "DependsOn": [
                "EKSMockServiceALBControlleralbsaConditionJson9A75689E",
                "EKSMockServiceALBControlleralbsamanifestalbsaServiceAccountResourceB5984FF5",
                "EKSMockServiceALBControlleralbsaRoleDefaultPolicyFF96705E",
                "EKSMockServiceALBControlleralbsaRole65D5D0B4",
                "L2ClusterAwsAuthmanifestFE4DC393",
                "L2ClusterKubectlReadyBarrier1037A14D",
                "L2ClusterOpenIdConnectProvider5FA8BEC0"
            ],
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete"
        },
        "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    {
                        "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                    }
                ],
                "Policies": [
                    {
                        "PolicyName": "Inline",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Action": [
                                        "iam:CreateOpenIDConnectProvider",
                                        "iam:DeleteOpenIDConnectProvider",
                                        "iam:UpdateOpenIDConnectProviderThumbprint",
                                        "iam:AddClientIDToOpenIDConnectProvider",
                                        "iam:RemoveClientIDFromOpenIDConnectProvider"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                    },
                    "S3Key": "977fc1649d2dbcce16e23f6332faef6fa0f48aa74a0afe35f4a3467754e20cd8.zip"
                },
                "Timeout": 900,
                "MemorySize": 128,
                "Handler": "__entrypoint__.handler",
                "Role": {
                    "Fn::GetAtt": [
                        "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65",
                        "Arn"
                    ]
                },
                "Runtime": {
                    "Fn::FindInMap": [
                        "LatestNodeRuntimeMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "value"
                    ]
                }
            },
            "DependsOn": [
                "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65"
            ]
        },
        "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    {
                        "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                    }
                ]
            }
        },
        "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                    },
                    "S3Key": "70dc346d78f37c98f818c01173252d7441864d42268efd4ee44769cbd6f31d24.zip"
                },
                "Timeout": 900,
                "MemorySize": 128,
                "Handler": "__entrypoint__.handler",
                "Role": {
                    "Fn::GetAtt": [
                        "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867",
                        "Arn"
                    ]
                },
                "Runtime": {
                    "Fn::FindInMap": [
                        "LatestNodeRuntimeMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "value"
                    ]
                }
            },
            "DependsOn": [
                "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867"
            ]
        },
        "EKSMockServiceAwsAuthmanifest3D83DE97": {
            "Type": "Custom::AWSCDK-EKS-KubernetesResource",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
                        "Outputs.mockserviceeksawscdkawseksKubectlProviderframeworkonEvent23CDAF83Arn"
                    ]
                },
                "Manifest": "[{\"apiVersion\":\"v1\",\"kind\":\"ConfigMap\",\"metadata\":{\"name\":\"aws-auth\",\"namespace\":\"kube-system\",\"labels\":{\"aws.cdk.eks/prune-c8c314c3093c4f14a97ea5708a5429e9ee187123c9\":\"\"}},\"data\":{\"mapRoles\":\"[{\\\"rolearn\\\":\\\"arn:aws:sts::709310380790:assumed-role/AWSReservedSSO_AdministratorAccess_30daf8503494f58e/nmarks@imprivata.com\\\",\\\"username\\\":\\\"arn:aws:sts::709310380790:assumed-role/AWSReservedSSO_AdministratorAccess_30daf8503494f58e/nmarks@imprivata.com\\\",\\\"groups\\\":[\\\"system:masters\\\"]}]\",\"mapUsers\":\"[]\",\"mapAccounts\":\"[]\"}}]",
                "ClusterName": {
                    "Ref": "L2ClusterE60998BB"
                },
                "RoleArn": {
                    "Fn::GetAtt": [
                        "L2ClusterCreationRoleFCDE87E9",
                        "Arn"
                    ]
                },
                "PruneLabel": "aws.cdk.eks/prune-c8c314c3093c4f14a97ea5708a5429e9ee187123c9",
                "Overwrite": true
            },
            "DependsOn": [
                "L2ClusterKubectlReadyBarrier1037A14D"
            ],
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete"
        }
    },
    "Conditions": {
        "L2ClusterHasEcrPublic10C4760A": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Partition"
                },
                "aws"
            ]
        }
    },
    "Mappings": {
        "LatestNodeRuntimeMap": {
            "af-south-1": {
                "value": "nodejs20.x"
            },
            "ap-east-1": {
                "value": "nodejs20.x"
            },
            "ap-northeast-1": {
                "value": "nodejs20.x"
            },
            "ap-northeast-2": {
                "value": "nodejs20.x"
            },
            "ap-northeast-3": {
                "value": "nodejs20.x"
            },
            "ap-south-1": {
                "value": "nodejs20.x"
            },
            "ap-south-2": {
                "value": "nodejs20.x"
            },
            "ap-southeast-1": {
                "value": "nodejs20.x"
            },
            "ap-southeast-2": {
                "value": "nodejs20.x"
            },
            "ap-southeast-3": {
                "value": "nodejs20.x"
            },
            "ap-southeast-4": {
                "value": "nodejs20.x"
            },
            "ap-southeast-5": {
                "value": "nodejs20.x"
            },
            "ap-southeast-7": {
                "value": "nodejs20.x"
            },
            "ca-central-1": {
                "value": "nodejs20.x"
            },
            "ca-west-1": {
                "value": "nodejs20.x"
            },
            "cn-north-1": {
                "value": "nodejs18.x"
            },
            "cn-northwest-1": {
                "value": "nodejs18.x"
            },
            "eu-central-1": {
                "value": "nodejs20.x"
            },
            "eu-central-2": {
                "value": "nodejs20.x"
            },
            "eu-isoe-west-1": {
                "value": "nodejs18.x"
            },
            "eu-north-1": {
                "value": "nodejs20.x"
            },
            "eu-south-1": {
                "value": "nodejs20.x"
            },
            "eu-south-2": {
                "value": "nodejs20.x"
            },
            "eu-west-1": {
                "value": "nodejs20.x"
            },
            "eu-west-2": {
                "value": "nodejs20.x"
            },
            "eu-west-3": {
                "value": "nodejs20.x"
            },
            "il-central-1": {
                "value": "nodejs20.x"
            },
            "me-central-1": {
                "value": "nodejs20.x"
            },
            "me-south-1": {
                "value": "nodejs20.x"
            },
            "mx-central-1": {
                "value": "nodejs20.x"
            },
            "sa-east-1": {
                "value": "nodejs20.x"
            },
            "us-east-1": {
                "value": "nodejs20.x"
            },
            "us-east-2": {
                "value": "nodejs20.x"
            },
            "us-gov-east-1": {
                "value": "nodejs18.x"
            },
            "us-gov-west-1": {
                "value": "nodejs18.x"
            },
            "us-iso-east-1": {
                "value": "nodejs18.x"
            },
            "us-iso-west-1": {
                "value": "nodejs18.x"
            },
            "us-isob-east-1": {
                "value": "nodejs18.x"
            },
            "us-west-1": {
                "value": "nodejs20.x"
            },
            "us-west-2": {
                "value": "nodejs20.x"
            }
        }
    },
    "Parameters": {
        "BootstrapVersion": {
            "Type": "AWS::SSM::Parameter::Value<String>",
            "Default": "/cdk-bootstrap/hnb659fds/version",
            "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
        }
    },
    "Rules": {
        "CheckBootstrapVersion": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Not": [
                            {
                                "Fn::Contains": [
                                    [
                                        "1",
                                        "2",
                                        "3",
                                        "4",
                                        "5"
                                    ],
                                    {
                                        "Ref": "BootstrapVersion"
                                    }
                                ]
                            }
                        ]
                    },
                    "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
                }
            ]
        }
    }
}